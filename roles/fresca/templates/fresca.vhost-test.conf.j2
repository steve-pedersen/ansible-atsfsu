# Application configuration
<Directory /var/www/catalog/public>
        RewriteEngine on

        # Force SSL
        RewriteCond %{HTTPS} ^off$
        RewriteRule ^/?(.*)$ https://%{SERVER_NAME}/$1 [L,QSA,R=permanent]

        RewriteCond %{REQUEST_FILENAME} !-f
        RewriteCond %{REQUEST_FILENAME} !-d
        RewriteCond %{REQUEST_URI} !^/Shibboleth.sso
        RewriteRule ^(.*)$ index.php?p=$1 [L,QSA]
</Directory>

# HTTP vhost
<VirtualHost *:80>
        ServerAdmin chsoney@sfsu.edu
        DocumentRoot /var/www/catalog/public
        ErrorLog /var/log/apache2/error.log
        LogLevel warn
        CustomLog /var/log/apache2/access.log combined
</VirtualHost>

# HTTPS vhost
<IfModule mod_ssl.c>
<VirtualHost _default_:443>
        ServerAdmin chosney@sfsu.edu
        DocumentRoot /var/www/catalog/public
        ErrorLog /var/log/apache2/error.log
        LogLevel warn
        CustomLog /var/log/apache2/ssl_access.log combined
        Header always set Strict-Transport-Security "max-age=63072000;"

        #   SSL Engine Switch:
        #   Enable/Disable SSL for this virtual host.
        SSLEngine on

        #   A self-signed (snakeoil) certificate can be created by installing
        #   the ssl-cert package. See
        #   /usr/share/doc/apache2.2-common/README.Debian.gz for more info.
        #   If both key and certificate are stored in the same file, only the
        #   SSLCertificateFile directive is needed.
        SSLCertificateFile    /etc/apache2/certs/{{ fresca_test_cert_file_filename }}
        SSLCertificateKeyFile /etc/apache2/certs/{{ fresca_test_cert_key_filename }}

        #   Server Certificate Chain:
        #   Point SSLCertificateChainFile at a file containing the
        #   concatenation of PEM encoded CA certificates which form the
        #   certificate chain for the server certificate. Alternatively
        #   the referenced file can be the same as SSLCertificateFile
        #   when the CA certificates are directly appended to the server
        #   certificate for convinience.
        #SSLCertificateChainFile /etc/apache2/ssl.crt/server-ca.crt

        #   Certificate Authority (CA):
        #   Set the CA certificate verification path where to find CA
        #   certificates for client authentication or alternatively one
        #   huge file containing all of them (file must be PEM encoded)
        #   Note: Inside SSLCACertificatePath you need hash symlinks
        #         to point to the certificate files. Use the provided
        #         Makefile to update the hash symlinks after changes.
        #SSLCACertificatePath /etc/ssl/certs/
        #SSLCACertificateFile /etc/apache2/ssl.crt/ca-bundle.crt

        
        <FilesMatch "\.(cgi|shtml|phtml|php)$">
                SSLOptions +StdEnvVars
        </FilesMatch>
        <Directory /usr/lib/cgi-bin>
                SSLOptions +StdEnvVars
        </Directory>
        
        <IfModule mod_shib2.c>
            <LocationMatch "/login/complete/[a-zA-Z0-9]+-shib$">
                AuthType shibboleth
                ShibRedirectToSSL 443
                ShibRequireSession On
                ShibUseHeaders On
                require valid-user
            </LocationMatch>
        </IfModule>

        BrowserMatch "MSIE [2-6]" \
                nokeepalive ssl-unclean-shutdown \
                downgrade-1.0 force-response-1.0
        # MSIE 7 and newer should be able to use keepalive
        BrowserMatch "MSIE [17-9]" ssl-unclean-shutdown
</VirtualHost>
</IfModule>